{"version":3,"file":"Facepile.Basic.Example.js","sourceRoot":"../src/","sources":["components/Facepile/examples/Facepile.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  Checkbox,\r\n  Dropdown,\r\n  Facepile,\r\n  IDropdownOption,\r\n  IFacepilePersona,\r\n  IFacepileProps,\r\n  PersonaSize,\r\n  Slider\r\n} from 'office-ui-fabric-react/lib/index';\r\nimport { autobind } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { facepilePersonas } from './FacepileExampleData';\r\nimport './Facepile.Examples.scss';\r\n\r\nexport enum ExtraDataType {\r\n  none = 0,\r\n  name = 1\r\n}\r\n\r\nexport interface IFacepileBasicExampleState {\r\n  numberOfFaces: any;\r\n  imagesFadeIn: boolean;\r\n  extraDataType: ExtraDataType;\r\n  personaSize: PersonaSize;\r\n}\r\n\r\nexport class FacepileBasicExample extends React.Component<any, IFacepileBasicExampleState> {\r\n  public constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      numberOfFaces: 3,\r\n      imagesFadeIn: true,\r\n      extraDataType: ExtraDataType.none,\r\n      personaSize: PersonaSize.extraSmall\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let { extraDataType, numberOfFaces, personaSize } = this.state;\r\n    let facepileProps: IFacepileProps = {\r\n      personaSize: personaSize,\r\n      personas: facepilePersonas.slice(0, numberOfFaces),\r\n      getPersonaProps: (persona: IFacepilePersona) => {\r\n        if (extraDataType === ExtraDataType.name) {\r\n          return {\r\n            imageShouldFadeIn: this.state.imagesFadeIn,\r\n            hidePersonaDetails: false\r\n          };\r\n        }\r\n        return {\r\n          imageShouldFadeIn: this.state.imagesFadeIn\r\n        };\r\n      },\r\n      ariaDescription: 'To move through the items use left and right arrow keys.'\r\n    };\r\n\r\n    return (\r\n      <div className={ 'ms-FacepileExample' }>\r\n        <Facepile {...facepileProps} />\r\n        <div className={ 'control' }>\r\n          <Slider\r\n            label='Number of Personas:'\r\n            min={ 1 }\r\n            max={ 5 }\r\n            step={ 1 }\r\n            showValue={ true }\r\n            value={ numberOfFaces }\r\n            onChange={ this._onChangePersonaNumber }\r\n          />\r\n        </div>\r\n        <Checkbox\r\n          label='Fade In'\r\n          checked={ this.state.imagesFadeIn }\r\n          onChange={ this._onChangeFadeIn }\r\n        />\r\n        <Dropdown\r\n          label='Persona Size:'\r\n          selectedKey={ this.state.personaSize }\r\n          options={\r\n            [\r\n              { key: PersonaSize.extraSmall, text: PersonaSize[PersonaSize.extraSmall] },\r\n              { key: PersonaSize.extraExtraSmall, text: PersonaSize[PersonaSize.extraExtraSmall] }\r\n            ]\r\n          }\r\n          onChanged={ this._onChangePersonaSize }\r\n        />\r\n        <Dropdown\r\n          label='Additional Data:'\r\n          selectedKey={ this.state.extraDataType }\r\n          options={\r\n            [\r\n              { key: ExtraDataType.none, text: ExtraDataType[ExtraDataType.none] },\r\n              { key: ExtraDataType.name, text: ExtraDataType[ExtraDataType.name] }\r\n            ]\r\n          }\r\n          onChanged={ this._onChangeAddtlData }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  private _onChangeAddtlData(value: IDropdownOption): void {\r\n    this.setState((prevState: IFacepileBasicExampleState): IFacepileBasicExampleState => {\r\n      prevState.extraDataType = value.key as ExtraDataType;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onChangeFadeIn(ev: React.FormEvent<HTMLElement | HTMLInputElement>, checked: boolean): void {\r\n    this.setState((prevState: IFacepileBasicExampleState): IFacepileBasicExampleState => {\r\n      prevState.imagesFadeIn = checked!;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onChangePersonaNumber(value: number): void {\r\n    this.setState((prevState: IFacepileBasicExampleState): IFacepileBasicExampleState => {\r\n      prevState.numberOfFaces = value;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  @autobind\r\n  private _onChangePersonaSize(value: IDropdownOption): void {\r\n    this.setState((prevState: IFacepileBasicExampleState): IFacepileBasicExampleState => {\r\n      prevState.personaSize = value.key as PersonaSize;\r\n      return prevState;\r\n    });\r\n  }\r\n}"]}